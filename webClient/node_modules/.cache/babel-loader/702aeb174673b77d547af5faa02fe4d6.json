{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/development/evergReen/client/src/context/appContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { BoxLoading } from \"react-loadingg\";\nimport { useMethods } from \"react-use\";\nimport categoryService from '../services/CategoryService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  allCategories: []\n};\n\nfunction createMethods(state) {\n  return {\n    reset() {\n      return initialState;\n    },\n\n    initCategories(allCategories) {\n      return { ...state,\n        allCategories\n      };\n    },\n\n    /**\n     * ! USERS/ADMIN -- REDUCERS \n     */\n    addNewCategory(user) {\n      return { ...state,\n        allCategories: state.allCategories.concat(user)\n      };\n    },\n\n    deleteCategory(id) {\n      return { ...state,\n        allCategories: state.allCategories.filter(u => id !== u.id)\n      };\n    },\n\n    editCategory(user) {\n      const updatedUsers = []; // eslint-disable-next-line array-callback-return\n\n      state.allCategories.map(item => {\n        if (user.id === item.id) updatedUsers.push(user);else updatedUsers.push(item);\n      });\n      return { ...state,\n        allCategories: updatedUsers\n      };\n    }\n\n  };\n}\n\nexport const AppContext = /*#__PURE__*/createContext();\nexport default _s(({\n  children\n}) => {\n  _s();\n\n  const [loaded, setLoaded] = useState(false);\n  const [store, methods] = useMethods(createMethods, initialState);\n  useEffect(async () => {\n    try {\n      const allCategories = await categoryService.allCatgories();\n      await methods.initCategories(allCategories.data);\n      setLoaded(true);\n    } catch (err) {\n      console.log(err);\n      setLoaded(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !loaded ? /*#__PURE__*/_jsxDEV(BoxLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        store,\n        methods\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 3\n  }, this);\n}, \"8frDIDE4Dz5U8g5qx7X5Xj0kxI4=\", false, function () {\n  return [useMethods];\n});","map":{"version":3,"sources":["/home/asd/Desktop/development/evergReen/client/src/context/appContext.jsx"],"names":["React","createContext","useState","useEffect","BoxLoading","useMethods","categoryService","initialState","allCategories","createMethods","state","reset","initCategories","addNewCategory","user","concat","deleteCategory","id","filter","u","editCategory","updatedUsers","map","item","push","AppContext","children","loaded","setLoaded","store","methods","allCatgories","data","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,SAASC,UAAT,QAA2B,gBAA3B;AAEA,SAASC,UAAT,QAA2B,WAA3B;AAEA,OAAOC,eAAP,MAA4B,6BAA5B;;AAKA,MAAMC,YAAY,GAAG;AAEnBC,EAAAA,aAAa,EAAE;AAFI,CAArB;;AAOE,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,SAAO;AACLC,IAAAA,KAAK,GAAG;AACN,aAAOJ,YAAP;AACD,KAHI;;AAKLK,IAAAA,cAAc,CAACJ,aAAD,EAAgB;AAC5B,aAAO,EAAE,GAAGE,KAAL;AAAYF,QAAAA;AAAZ,OAAP;AACD,KAPI;;AASL;AACN;AACA;AACMK,IAAAA,cAAc,CAACC,IAAD,EAAM;AAClB,aAAO,EAAC,GAAGJ,KAAJ;AAAWF,QAAAA,aAAa,EAACE,KAAK,CAACF,aAAN,CAAoBO,MAApB,CAA2BD,IAA3B;AAAzB,OAAP;AACD,KAdI;;AAeLE,IAAAA,cAAc,CAACC,EAAD,EAAI;AAChB,aAAO,EAAC,GAAGP,KAAJ;AAAWF,QAAAA,aAAa,EAACE,KAAK,CAACF,aAAN,CAAoBU,MAApB,CAA4BC,CAAC,IAAEF,EAAE,KAAGE,CAAC,CAACF,EAAtC;AAAzB,OAAP;AACD,KAjBI;;AAkBLG,IAAAA,YAAY,CAACN,IAAD,EAAM;AAChB,YAAMO,YAAY,GAAE,EAApB,CADgB,CAEhB;;AACAX,MAAAA,KAAK,CAACF,aAAN,CAAoBc,GAApB,CAAyBC,IAAD,IAAQ;AAC9B,YAAGT,IAAI,CAACG,EAAL,KAAYM,IAAI,CAACN,EAApB,EAAuBI,YAAY,CAACG,IAAb,CAAkBV,IAAlB,EAAvB,KACKO,YAAY,CAACG,IAAb,CAAkBD,IAAlB;AACN,OAHD;AAIA,aAAO,EAAC,GAAGb,KAAJ;AAAUF,QAAAA,aAAa,EAACa;AAAxB,OAAP;AACC;;AA1BE,GAAP;AA6BD;;AAEH,OAAO,MAAMI,UAAU,gBAAGxB,aAAa,EAAhC;AAEP,kBAAe,CAAC;AAAEyB,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC/B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAAC2B,KAAD,EAAQC,OAAR,IAAmBzB,UAAU,CAACI,aAAD,EAAgBF,YAAhB,CAAnC;AAKDJ,EAAAA,SAAS,CAAC,YAAW;AACd,QAAG;AAEC,YAAOK,aAAa,GAAC,MAAMF,eAAe,CAACyB,YAAhB,EAA3B;AACgB,YAAMD,OAAO,CAAClB,cAAR,CAAuBJ,aAAa,CAACwB,IAArC,CAAN;AAEhBJ,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH,KAND,CAOA,OAAMK,GAAN,EAAU;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAL,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AAGP,GAdQ,EAcN,EAdM,CAAT;AAeA,sBACC;AAAA,cACE,CAACD,MAAD,gBACA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADA,gBAGA,QAAC,UAAD,CAAY,QAAZ;AACC,MAAA,KAAK,EAAE;AACNE,QAAAA,KADM;AACAC,QAAAA;AADA,OADR;AAAA,gBAKEJ;AALF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADD;AAeA,CArCD;AAAA,UAE2BrB,UAF3B;AAAA","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nimport { BoxLoading } from \"react-loadingg\";\n\nimport { useMethods } from \"react-use\";\n\nimport categoryService from '../services/CategoryService';\n\n\n\n\nconst initialState = {\n\n  allCategories: [],\n\n};\n\n\n  function createMethods(state) {\n    return {\n      reset() {\n        return initialState;\n      },\n    \n      initCategories(allCategories) {\n        return { ...state, allCategories };\n      },\n     \n      /**\n       * ! USERS/ADMIN -- REDUCERS \n       */\n      addNewCategory(user){\n        return {...state, allCategories:state.allCategories.concat(user)}\n      },\n      deleteCategory(id){\n        return {...state, allCategories:state.allCategories.filter((u=>id!==u.id))}\n      },\n      editCategory(user){\n        const updatedUsers =[]\n        // eslint-disable-next-line array-callback-return\n        state.allCategories.map((item)=>{\n          if(user.id === item.id)updatedUsers.push(user);\n          else updatedUsers.push(item)\n        })\n        return {...state,allCategories:updatedUsers}\n        },\n     \n    };\n  }\n\nexport const AppContext = createContext();\n\nexport default ({ children }) => {\n  const [loaded, setLoaded] = useState(false);\n  const [store, methods] = useMethods(createMethods, initialState);\n\n\n\n\n\tuseEffect(async() => {\n        try{\n         \n            const  allCategories=await categoryService.allCatgories()\n                            await methods.initCategories(allCategories.data)\n\n            setLoaded(true)\n        }\n        catch(err){\n            console.log(err)\n            setLoaded(true)\n        }\n      \n        \n\t}, []);\n\treturn (\n\t\t<div>\n\t\t\t{!loaded ? (\n\t\t\t\t<BoxLoading />\n\t\t\t) : (\n\t\t\t\t<AppContext.Provider\n\t\t\t\t\tvalue={{\n\t\t\t\t\t\tstore,methods\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{children}\n\t\t\t\t</AppContext.Provider>\n\t\t\t)}\n\t\t</div>\n\t);\n};"]},"metadata":{},"sourceType":"module"}