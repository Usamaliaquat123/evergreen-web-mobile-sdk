{"ast":null,"code":"// import React from 'react';\n// import { useForm } from 'react-hook-form';\n// import { yupResolver } from '@hookform/resolvers';\n// import * as yup from 'yup';\n// import { NotificationManager } from 'react-notifications';\n// import categoryService from '../../../../services/CategoryService';\n// import { AppContext } from '../../../../context/appContext';\n// /* Validation starts here */\n// const schema = yup.object().shape({\n// \tname: yup.string().required(() => {\n// \t\tNotificationManager.error('Category Name  is Required');\n// \t}),\n// \tdesc: yup.string().required(() => {\n// \t\tNotificationManager.error('Category Description is  Required');\n// \t}),\n// });\n// /* Validation ends here */\n// /* Functional componennet starts here */\n// const AddCategoryForm = () => {\n// \tconst { methods } = React.useContext(AppContext);\n// \tconst { register, handleSubmit, reset } = useForm({\n// \t\tresolver: yupResolver(schema),\n// \t\tmode: 'onSubmit',\n// \t\treValidateMode: 'onSubmit',\n// \t\tcriteriaMode: 'firstError',\n// \t\tshouldFocusError: true,\n// \t\tshouldUnregister: true,\n// \t});\n// \tconst onSubmit = async (formData) => {\n// \t\t// setLoader(false);\n// \t\tconst categoryExist = await categoryService.categoryAlreadyExist(formData.name);\n// \t\tif (categoryExist.payload) {\n// \t\t\tNotificationManager.error(categoryExist.msgBody);\n// \t\t} else {\n// \t\t\tcategoryService\n// \t\t\t\t.createCategory(formData)\n// \t\t\t\t.then((res) => {\n// \t\t\t\t\tif (res.success) {\n// \t\t\t\t\t\tNotificationManager.success(res.msgBody);\n// \t\t\t\t\t\tmethods.addNewCategory(res.payload);\n// \t\t\t\t\t\treset();\n// \t\t\t\t\t} else {\n// \t\t\t\t\t\tNotificationManager.error(res.msgBody);\n// \t\t\t\t\t}\n// \t\t\t\t})\n// \t\t\t\t.catch((err) => {\n// \t\t\t\t\tconsole.log(err);\n// \t\t\t\t});\n// \t\t}\n// \t};\n// \treturn (\n// \t\t<div className='container-fluid'>\n// \t\t\t<div className='row'>\n// \t\t\t\t<div className='col-md-12'>\n// \t\t\t\t\t<form onSubmit={handleSubmit(onSubmit)} encType='multipart/form-data'>\n// \t\t\t\t\t\t<div className=''>\n// \t\t\t\t\t\t\t<div className='flex-row mt-2 d-flex justify-content-center align-items-center'>\n// \t\t\t\t\t\t\t\t<label htmlFor='name' className='mr-2'>\n// \t\t\t\t\t\t\t\t\tName\n// \t\t\t\t\t\t\t\t</label>\n// \t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\ttype='text'\n// \t\t\t\t\t\t\t\t\tclassName='form-control form-control-sm custom-input-register'\n// \t\t\t\t\t\t\t\t\tname='name'\n// \t\t\t\t\t\t\t\t\tid='name'\n// \t\t\t\t\t\t\t\t\tref={register}\n// \t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t<div className='flex-row mt-2 d-flex justify-content-center align-items-center'>\n// \t\t\t\t\t\t\t\t<label htmlFor='desc' className='mr-2'>\n// \t\t\t\t\t\t\t\t\tDescription\n// \t\t\t\t\t\t\t\t</label>\n// \t\t\t\t\t\t\t\t<textarea\n// \t\t\t\t\t\t\t\t\tclassName='form-control form-control-sm custom-input-register'\n// \t\t\t\t\t\t\t\t\tname='desc'\n// \t\t\t\t\t\t\t\t\tid='desc'\n// \t\t\t\t\t\t\t\t\ttype='text'\n// \t\t\t\t\t\t\t\t\tref={register}\n// \t\t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t\t></textarea>\n// \t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t<div className='flex-row mt-2 d-flex justify-content-center align-items-center'>\n// \t\t\t\t\t\t\t\t<label htmlFor='catImage' className='mr-2'>\n// \t\t\t\t\t\t\t\t\tImage\n// \t\t\t\t\t\t\t\t</label>\n// \t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\tclassName='form-control form-control-sm custom-input-register'\n// \t\t\t\t\t\t\t\t\tname='catImage'\n// \t\t\t\t\t\t\t\t\tid='catImage'\n// \t\t\t\t\t\t\t\t\ttype='file'\n// \t\t\t\t\t\t\t\t\t// multiple={false}\n// \t\t\t\t\t\t\t\t\tref={register}\n// \t\t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</form>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</div>\n// \t);\n// };\n// export default AddCategoryForm;","map":{"version":3,"sources":["/home/asd/Desktop/DART/nativeTarget/webClient/src/component/Admin/AdminPages/CategoryPage/AddCategory.jsx"],"names":[],"mappings":"AAAA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from 'react';\n\n// import { useForm } from 'react-hook-form';\n\n// import { yupResolver } from '@hookform/resolvers';\n\n// import * as yup from 'yup';\n\n// import { NotificationManager } from 'react-notifications';\n\n// import categoryService from '../../../../services/CategoryService';\n\n// import { AppContext } from '../../../../context/appContext';\n\n// /* Validation starts here */\n// const schema = yup.object().shape({\n// \tname: yup.string().required(() => {\n// \t\tNotificationManager.error('Category Name  is Required');\n// \t}),\n// \tdesc: yup.string().required(() => {\n// \t\tNotificationManager.error('Category Description is  Required');\n// \t}),\n// });\n\n// /* Validation ends here */\n// /* Functional componennet starts here */\n\n// const AddCategoryForm = () => {\n// \tconst { methods } = React.useContext(AppContext);\n// \tconst { register, handleSubmit, reset } = useForm({\n// \t\tresolver: yupResolver(schema),\n// \t\tmode: 'onSubmit',\n// \t\treValidateMode: 'onSubmit',\n// \t\tcriteriaMode: 'firstError',\n// \t\tshouldFocusError: true,\n// \t\tshouldUnregister: true,\n// \t});\n\n// \tconst onSubmit = async (formData) => {\n// \t\t// setLoader(false);\n// \t\tconst categoryExist = await categoryService.categoryAlreadyExist(formData.name);\n// \t\tif (categoryExist.payload) {\n// \t\t\tNotificationManager.error(categoryExist.msgBody);\n// \t\t} else {\n// \t\t\tcategoryService\n// \t\t\t\t.createCategory(formData)\n// \t\t\t\t.then((res) => {\n// \t\t\t\t\tif (res.success) {\n// \t\t\t\t\t\tNotificationManager.success(res.msgBody);\n// \t\t\t\t\t\tmethods.addNewCategory(res.payload);\n// \t\t\t\t\t\treset();\n// \t\t\t\t\t} else {\n// \t\t\t\t\t\tNotificationManager.error(res.msgBody);\n// \t\t\t\t\t}\n// \t\t\t\t})\n// \t\t\t\t.catch((err) => {\n// \t\t\t\t\tconsole.log(err);\n// \t\t\t\t});\n// \t\t}\n// \t};\n\n// \treturn (\n// \t\t<div className='container-fluid'>\n// \t\t\t<div className='row'>\n// \t\t\t\t<div className='col-md-12'>\n// \t\t\t\t\t<form onSubmit={handleSubmit(onSubmit)} encType='multipart/form-data'>\n// \t\t\t\t\t\t<div className=''>\n// \t\t\t\t\t\t\t<div className='flex-row mt-2 d-flex justify-content-center align-items-center'>\n// \t\t\t\t\t\t\t\t<label htmlFor='name' className='mr-2'>\n// \t\t\t\t\t\t\t\t\tName\n// \t\t\t\t\t\t\t\t</label>\n// \t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\ttype='text'\n// \t\t\t\t\t\t\t\t\tclassName='form-control form-control-sm custom-input-register'\n// \t\t\t\t\t\t\t\t\tname='name'\n// \t\t\t\t\t\t\t\t\tid='name'\n// \t\t\t\t\t\t\t\t\tref={register}\n// \t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t<div className='flex-row mt-2 d-flex justify-content-center align-items-center'>\n// \t\t\t\t\t\t\t\t<label htmlFor='desc' className='mr-2'>\n// \t\t\t\t\t\t\t\t\tDescription\n// \t\t\t\t\t\t\t\t</label>\n// \t\t\t\t\t\t\t\t<textarea\n// \t\t\t\t\t\t\t\t\tclassName='form-control form-control-sm custom-input-register'\n// \t\t\t\t\t\t\t\t\tname='desc'\n// \t\t\t\t\t\t\t\t\tid='desc'\n// \t\t\t\t\t\t\t\t\ttype='text'\n// \t\t\t\t\t\t\t\t\tref={register}\n// \t\t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t\t></textarea>\n// \t\t\t\t\t\t\t</div>\n\n// \t\t\t\t\t\t\t<div className='flex-row mt-2 d-flex justify-content-center align-items-center'>\n// \t\t\t\t\t\t\t\t<label htmlFor='catImage' className='mr-2'>\n// \t\t\t\t\t\t\t\t\tImage\n// \t\t\t\t\t\t\t\t</label>\n// \t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\tclassName='form-control form-control-sm custom-input-register'\n// \t\t\t\t\t\t\t\t\tname='catImage'\n// \t\t\t\t\t\t\t\t\tid='catImage'\n// \t\t\t\t\t\t\t\t\ttype='file'\n// \t\t\t\t\t\t\t\t\t// multiple={false}\n// \t\t\t\t\t\t\t\t\tref={register}\n// \t\t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</form>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t</div>\n// \t);\n// };\n// export default AddCategoryForm;\n\n\n\n"]},"metadata":{},"sourceType":"module"}