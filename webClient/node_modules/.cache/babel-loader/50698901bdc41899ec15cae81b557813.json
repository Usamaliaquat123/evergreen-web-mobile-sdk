{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/DART/nativeTarget/webClient/src/component/Admin/AdminPages/CategoryPage/AddCategory.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from 'yup';\nimport { NotificationManager } from 'react-notifications';\nimport categoryService from '../../../../services/CategoryService';\nimport { AppContext } from '../../../../context/appContext';\n/* Validation starts here */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  name: yup.string().required(() => {\n    NotificationManager.error('Category Name  is Required');\n  }),\n  desc: yup.string().required(() => {\n    NotificationManager.error('Category Description is  Required');\n  })\n});\n/* Validation ends here */\n\n/* Functional componennet starts here */\n\nconst AddCategoryForm = () => {\n  _s();\n\n  var _errors$name, _errors$desc, _errors$name2;\n\n  const {\n    methods\n  } = React.useContext(AppContext);\n  const {\n    register,\n    handleSubmit,\n    reset,\n    errors\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: 'onSubmit',\n    reValidateMode: 'onSubmit',\n    criteriaMode: 'firstError',\n    shouldFocusError: true,\n    shouldUnregister: true\n  });\n\n  const onSubmit = async formData => {\n    // setLoader(false);\n    const categoryExist = await categoryService.categoryAlreadyExist(formData.name);\n\n    if (categoryExist.payload) {\n      NotificationManager.error(categoryExist.msgBody);\n    } else {\n      categoryService.createCategory(formData).then(res => {\n        if (res.success) {\n          NotificationManager.success(res.msgBody);\n          methods.addNewCategory(res.payload);\n          reset();\n        } else {\n          NotificationManager.error(res.msgBody);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          encType: \"multipart/form-data\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border border-danger col-md-3\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"name\",\n                  children: \" Category Name \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border border-danger col-md-9\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: `form-control form-control-sm border-${((_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message) === '' ? 'success' : 'danger'}`,\n                  name: \"name\",\n                  id: \"name\",\n                  ref: register\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"desc\",\n                className: \"mr-2\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: `form-control form-control-sm border-${((_errors$desc = errors.desc) === null || _errors$desc === void 0 ? void 0 : _errors$desc.message) === '' ? 'success' : 'danger'}`,\n                name: \"desc\",\n                id: \"desc\",\n                type: \"text\",\n                ref: register,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"catImage\",\n                className: \"mr-2\",\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: `form-control form-control-sm border-${((_errors$name2 = errors.name) === null || _errors$name2 === void 0 ? void 0 : _errors$name2.message) === '' ? 'success' : 'danger'}`,\n                name: \"catImage\",\n                id: \"catImage\",\n                type: \"file\" // multiple={false}\n                ,\n                ref: register,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AddCategoryForm, \"9dl7Xr3sC73VjwTGGi0Jj/MFOww=\", false, function () {\n  return [useForm];\n});\n\n_c = AddCategoryForm;\nexport default AddCategoryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCategoryForm\");","map":{"version":3,"sources":["/home/asd/Desktop/DART/nativeTarget/webClient/src/component/Admin/AdminPages/CategoryPage/AddCategory.jsx"],"names":["React","useForm","yupResolver","yup","NotificationManager","categoryService","AppContext","schema","object","shape","name","string","required","error","desc","AddCategoryForm","methods","useContext","register","handleSubmit","reset","errors","resolver","mode","reValidateMode","criteriaMode","shouldFocusError","shouldUnregister","onSubmit","formData","categoryExist","categoryAlreadyExist","payload","msgBody","createCategory","then","res","success","addNewCategory","catch","err","console","log","message"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { useForm } from 'react-hook-form';\n\nimport { yupResolver } from '@hookform/resolvers';\n\nimport * as yup from 'yup';\n\nimport { NotificationManager } from 'react-notifications';\n\nimport categoryService from '../../../../services/CategoryService';\n\nimport { AppContext } from '../../../../context/appContext';\n\n/* Validation starts here */\nconst schema = yup.object().shape({\n\tname: yup.string().required(() => {\n\t\tNotificationManager.error('Category Name  is Required');\n\t}),\n\tdesc: yup.string().required(() => {\n\t\tNotificationManager.error('Category Description is  Required');\n\t}),\n});\n\n/* Validation ends here */\n/* Functional componennet starts here */\n\nconst AddCategoryForm = () => {\n\tconst { methods } = React.useContext(AppContext);\n\tconst { register, handleSubmit, reset,errors } = useForm({\n\t\tresolver: yupResolver(schema),\n\t\tmode: 'onSubmit',\n\t\treValidateMode: 'onSubmit',\n\t\tcriteriaMode: 'firstError',\n\t\tshouldFocusError: true,\n\t\tshouldUnregister: true,\n\t});\n\n\tconst onSubmit = async (formData) => {\n\t\t// setLoader(false);\n\t\tconst categoryExist = await categoryService.categoryAlreadyExist(formData.name);\n\t\tif (categoryExist.payload) {\n\t\t\tNotificationManager.error(categoryExist.msgBody);\n\t\t} else {\n\t\t\tcategoryService\n\t\t\t\t.createCategory(formData)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\tNotificationManager.success(res.msgBody);\n\t\t\t\t\t\tmethods.addNewCategory(res.payload);\n\t\t\t\t\t\treset();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tNotificationManager.error(res.msgBody);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='container-fluid'>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col-md-12'>\n\t\t\t\t\t<form onSubmit={handleSubmit(onSubmit)} encType='multipart/form-data'>\n\t\t\t\t\t\t<div className=''>\n\t\t\t\t\t\t\t<div className='row'>\n                                <div className=\"border border-danger col-md-3\">\n                                    <label htmlFor=\"name\"> Category Name </label>\n                                </div>\n                                <div className=\"border border-danger col-md-9\">\n                                <input\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tclassName={`form-control form-control-sm border-${errors.name?.message==='' ? 'success':'danger' }`} \n\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\tid='name'\n\t\t\t\t\t\t\t\t\tref={register}\n                                />\n                                </div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=''>\n\t\t\t\t\t\t\t\t<label htmlFor='desc' className='mr-2'>\n\t\t\t\t\t\t\t\t\tDescription\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\tclassName={`form-control form-control-sm border-${errors.desc?.message==='' ? 'success':'danger' }`} \n\t\t\t\t\t\t\t\t\tname='desc'\n\t\t\t\t\t\t\t\t\tid='desc'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t></textarea>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=''>\n\t\t\t\t\t\t\t\t<label htmlFor='catImage' className='mr-2'>\n\t\t\t\t\t\t\t\t\tImage\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName={`form-control form-control-sm border-${errors.name?.message==='' ? 'success':'danger' }`} \n\t\t\t\t\t\t\t\t\tname='catImage'\n\t\t\t\t\t\t\t\t\tid='catImage'\n\t\t\t\t\t\t\t\t\ttype='file'\n\t\t\t\t\t\t\t\t\t// multiple={false}\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default AddCategoryForm;\n\n\n"]},"metadata":{},"sourceType":"module"}