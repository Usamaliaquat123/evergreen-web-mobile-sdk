{"ast":null,"code":"export default {\n  getTodos: () => {\n    return fetch(\"127.0.0.1:5000/user/todos\").then(res => {\n      if (res.status !== 401) {\n        return res.json().then(data => data);\n      }\n\n      return {\n        message: {\n          msgBody: \"unAuthorized\"\n        },\n        msgError: true\n      };\n    });\n  },\n  postTodo: todo => {\n    return fetch(\"127.0.0.1:5000/user/todo\", {\n      method: \"post\",\n      body: JSON.stringify(todo),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.status !== 401) {\n        return res.json().then(data => data);\n      }\n\n      return {\n        message: {\n          msgBody: \"unAuthorized\"\n        },\n        msgError: true\n      };\n    });\n  }\n};","map":{"version":3,"sources":["/home/asd/Desktop/development/evergReen/client/src/services/TodoService.js"],"names":["getTodos","fetch","then","res","status","json","data","message","msgBody","msgError","postTodo","todo","method","body","JSON","stringify","headers"],"mappings":"AAAA,eAAe;AACbA,EAAAA,QAAQ,EAAE,MAAM;AACd,WAAOC,KAAK,CAAC,2BAAD,CAAL,CAAmCC,IAAnC,CAAyCC,GAAD,IAAS;AACtD,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,eAAOD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAiBI,IAAD,IAAUA,IAA1B,CAAP;AACD;;AACC,aAAO;AAAEC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAX;AAAwCC,QAAAA,QAAQ,EAAE;AAAlD,OAAP;AAEH,KANM,CAAP;AAOD,GATY;AAWbC,EAAAA,QAAQ,EAAGC,IAAD,IAAU;AAClB,WAAOV,KAAK,CAAC,0BAAD,EAA6B;AACvCW,MAAAA,MAAM,EAAE,MAD+B;AAEvCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAFiC;AAGvCK,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAH8B,KAA7B,CAAL,CAMJd,IANI,CAMEC,GAAD,IAAS;AACf,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,eAAOD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAiBI,IAAD,IAAUA,IAA1B,CAAP;AACD;;AACC,aAAO;AAAEC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAX;AAAwCC,QAAAA,QAAQ,EAAE;AAAlD,OAAP;AAEH,KAZM,CAAP;AAaD;AAzBY,CAAf","sourcesContent":["export default {\n  getTodos: () => {\n    return fetch(\"127.0.0.1:5000/user/todos\").then((res) => {\n      if (res.status !== 401) {\n        return res.json().then((data) => data);\n      } \n        return { message: { msgBody: \"unAuthorized\" }, msgError: true };\n      \n    });\n  },\n\n  postTodo: (todo) => {\n    return fetch(\"127.0.0.1:5000/user/todo\", {\n      method: \"post\",\n      body: JSON.stringify(todo),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => {\n      if (res.status !== 401) {\n        return res.json().then((data) => data);\n      } \n        return { message: { msgBody: \"unAuthorized\" }, msgError: true };\n      \n    });\n  },\n};\n"]},"metadata":{},"sourceType":"module"}