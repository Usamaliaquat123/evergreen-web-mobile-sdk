{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/DART/nativeTarget/webClient/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport AuthService from \"../services/AuthService\";\nimport loader from \"../assets/svgs/loader.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport default _s(({\n  children\n}) => {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  /*\n    ! React hook version of componentDidMount()\n    */\n\n  useEffect(() => {\n    console.log(\" %c *** AuthProvider.useEffect *** \", \"font-size: 12px; font-weight: bold;color:green\");\n    AuthService.isAuthenticated().then(data => {\n      setUser(data.user);\n      setIsAuthenticated(data.isAuthenticated);\n      setIsLoaded(true);\n      console.log(\"AuthService.isAuthenticated() %o\", {\n        data\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoaded ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: loader,\n      alt: \"logo\",\n      style: {\n        width: \"300px\",\n        height: \"300px,\",\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        margin: \"-150px 0 0 -150px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        user,\n        setUser,\n        isAuthenticated,\n        setIsAuthenticated\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}, \"tG2ZS+OsKk/tGJm+09J8yjas9bY=\");","map":{"version":3,"sources":["/home/asd/Desktop/DART/nativeTarget/webClient/src/context/AuthContext.js"],"names":["React","createContext","useState","useEffect","AuthService","AuthContext","children","user","setUser","isAuthenticated","setIsAuthenticated","isLoaded","setIsLoaded","console","log","then","data","loader","width","height","position","top","left","margin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,OAAOC,WAAP,MAAwB,yBAAxB;;;AAIA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,EAAjC;AAEP,kBAAe,CAAC;AAAEK,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA;AACF;AACA;;AACEC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CACE,qCADF,EAEE,gDAFF;AAIAV,IAAAA,WAAW,CAACK,eAAZ,GAA8BM,IAA9B,CAAoCC,IAAD,IAAU;AAC3CR,MAAAA,OAAO,CAACQ,IAAI,CAACT,IAAN,CAAP;AACAG,MAAAA,kBAAkB,CAACM,IAAI,CAACP,eAAN,CAAlB;AACAG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgD;AAAEE,QAAAA;AAAF,OAAhD;AACD,KALD;AAMD,GAXQ,EAWN,EAXM,CAAT;AAYA,sBACE;AAAA,cACG,CAACL,QAAD,gBAED;AAAK,MAAA,GAAG,EAAEM,MAAV;AAAkB,MAAA,GAAG,EAAC,MAAtB;AAA6B,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC,OAAP;AAAeC,QAAAA,MAAM,EAAC,QAAtB;AAA+BC,QAAAA,QAAQ,EAAC,UAAxC;AAAmDC,QAAAA,GAAG,EAAC,KAAvD;AAA6DC,QAAAA,IAAI,EAAC,KAAlE;AAA0EC,QAAAA,MAAM,EAAE;AAAlF;AAApC;AAAA;AAAA;AAAA;AAAA,YAFC,gBAOC,QAAC,WAAD,CAAa,QAAb;AACE,MAAA,KAAK,EAAE;AAAEhB,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBC,QAAAA,eAAjB;AAAkCC,QAAAA;AAAlC,OADT;AAAA,gBAGGJ;AAHH;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CApCD","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nimport AuthService from \"../services/AuthService\";\n\nimport loader from  '../assets/svgs/loader.svg';\n\nexport const AuthContext = createContext();\n\nexport default ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  /*\n    ! React hook version of componentDidMount()\n    */\n  useEffect(() => {\n    console.log(\n      \" %c *** AuthProvider.useEffect *** \",\n      \"font-size: 12px; font-weight: bold;color:green\"\n    );\n    AuthService.isAuthenticated().then((data) => {\n      setUser(data.user);\n      setIsAuthenticated(data.isAuthenticated);\n      setIsLoaded(true);\n      console.log(\"AuthService.isAuthenticated() %o\", { data });\n    });\n  }, []);\n  return (\n    <div>\n      {!isLoaded ? (\n        \n      <img src={loader} alt=\"logo\" style={{width:\"300px\",height:\"300px,\",position:\"absolute\",top:\"50%\",left:\"50%\",  margin: \"-150px 0 0 -150px\",}}  />\n \n       \n        \n      ) : (\n        <AuthContext.Provider\n          value={{ user, setUser, isAuthenticated, setIsAuthenticated }}\n        >\n          {children}\n        </AuthContext.Provider>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}