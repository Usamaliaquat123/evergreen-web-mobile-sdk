{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/DART/nativeTarget/webClient/src/component/Admin/AdminPages/CategoryPage/AddCategory.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from 'yup';\nimport { NotificationManager } from 'react-notifications';\nimport categoryService from '../../../../services/CategoryService';\nimport { AppContext } from '../../../../context/appContext';\nimport AllCategories from './AllCategories';\n/* Validation starts here */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  name: yup.string().required(() => {\n    NotificationManager.error('Category Name  is Required');\n  }),\n  desc: yup.string().required(() => {\n    NotificationManager.error('Category Description is  Required');\n  })\n});\n/* Validation ends here */\n\n/* Functional componennet starts here */\n\nconst Register = () => {\n  _s();\n\n  const {\n    methods\n  } = React.useContext(AppContext);\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: 'onSubmit',\n    reValidateMode: 'onSubmit',\n    criteriaMode: 'firstError',\n    shouldFocusError: true,\n    shouldUnregister: true\n  });\n\n  const onSubmit = async formData => {\n    // setLoader(false);\n    const categoryExist = await categoryService.categoryAlreadyExist(formData.name);\n\n    if (categoryExist.payload) {\n      NotificationManager.error(categoryExist.msgBody);\n      setModalToggler(true);\n    } else {\n      categoryService.createCategory(formData).then(res => {\n        if (res.success) {\n          NotificationManager.success(res.msgBody);\n          methods.addNewCategory(res.payload);\n          reset();\n          setModalToggler(false); // setLoader(true);\n        } else {\n          NotificationManager.error(res.msgBody);\n          setModalToggler(false); // setLoader(true);\n        }\n      }).catch(err => {\n        console.log(err);\n        setModalToggler(false); // setLoader(true);\n      });\n    }\n  };\n\n  const AddCategoryForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-row mt-2 d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: \"mr-2\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control form-control-sm custom-input-register\",\n          name: \"name\",\n          id: \"name\",\n          ref: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-row mt-2 d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"desc\",\n          className: \"mr-2\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control form-control-sm custom-input-register\",\n          name: \"desc\",\n          id: \"desc\",\n          type: \"text\",\n          ref: register,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-row mt-2 d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"catImage\",\n          className: \"mr-2\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control form-control-sm custom-input-register\",\n          name: \"catImage\",\n          id: \"catImage\",\n          type: \"file\" // multiple={false}\n          ,\n          ref: register,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    encType: \"multipart/form-data\",\n    children: /*#__PURE__*/_jsxDEV(AddCategoryForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Register, \"TsbJvkTt6KRjOrfcXthWpBx3XJ0=\", false, function () {\n  return [useForm];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/asd/Desktop/DART/nativeTarget/webClient/src/component/Admin/AdminPages/CategoryPage/AddCategory.jsx"],"names":["React","useForm","yupResolver","yup","NotificationManager","categoryService","AppContext","AllCategories","schema","object","shape","name","string","required","error","desc","Register","methods","useContext","register","handleSubmit","reset","resolver","mode","reValidateMode","criteriaMode","shouldFocusError","shouldUnregister","onSubmit","formData","categoryExist","categoryAlreadyExist","payload","msgBody","setModalToggler","createCategory","then","res","success","addNewCategory","catch","err","console","log","AddCategoryForm"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { useForm } from 'react-hook-form';\n\nimport { yupResolver } from '@hookform/resolvers';\n\nimport * as yup from 'yup';\n\nimport { NotificationManager } from 'react-notifications';\n\nimport categoryService from '../../../../services/CategoryService';\n\nimport { AppContext } from '../../../../context/appContext';\n\nimport AllCategories from './AllCategories';\n\n/* Validation starts here */\nconst schema = yup.object().shape({\n\tname: yup.string().required(() => {\n\t\tNotificationManager.error('Category Name  is Required');\n\t}),\n\tdesc: yup.string().required(() => {\n\t\tNotificationManager.error('Category Description is  Required');\n\t}),\n});\n\n/* Validation ends here */\n/* Functional componennet starts here */\n\nconst Register = () => {\n\tconst { methods } = React.useContext(AppContext);\n\tconst { register, handleSubmit, reset } = useForm({\n\t\tresolver: yupResolver(schema),\n\t\tmode: 'onSubmit',\n\t\treValidateMode: 'onSubmit',\n\t\tcriteriaMode: 'firstError',\n\t\tshouldFocusError: true,\n\t\tshouldUnregister: true,\n\t});\n\n\tconst onSubmit = async (formData) => {\n\t\t// setLoader(false);\n\t\tconst categoryExist = await categoryService.categoryAlreadyExist(formData.name);\n\t\tif (categoryExist.payload) {\n\t\t\tNotificationManager.error(categoryExist.msgBody);\n\t\t\tsetModalToggler(true);\n\t\t} else {\n\t\t\tcategoryService\n\t\t\t\t.createCategory(formData)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\tNotificationManager.success(res.msgBody);\n\t\t\t\t\t\tmethods.addNewCategory(res.payload);\n\t\t\t\t\t\treset();\n\t\t\t\t\t\tsetModalToggler(false);\n\t\t\t\t\t\t// setLoader(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tNotificationManager.error(res.msgBody);\n\t\t\t\t\t\tsetModalToggler(false);\n\t\t\t\t\t\t// setLoader(true);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t\tsetModalToggler(false);\n\t\t\t\t\t// setLoader(true);\n\t\t\t\t});\n\t\t}\n\t};\n\n\tconst AddCategoryForm = () => {\n\t\treturn (\n\t\t\t<div className=''>\n\t\t\t\t<div className='flex-row mt-2 d-flex justify-content-center align-items-center'>\n\t\t\t\t\t<label htmlFor='name' className='mr-2'>\n\t\t\t\t\t\tName\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tclassName='form-control form-control-sm custom-input-register'\n\t\t\t\t\t\tname='name'\n\t\t\t\t\t\tid='name'\n\t\t\t\t\t\tref={register}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='flex-row mt-2 d-flex justify-content-center align-items-center'>\n\t\t\t\t\t<label htmlFor='desc' className='mr-2'>\n\t\t\t\t\t\tDescription\n\t\t\t\t\t</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName='form-control form-control-sm custom-input-register'\n\t\t\t\t\t\tname='desc'\n\t\t\t\t\t\tid='desc'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tref={register}\n\t\t\t\t\t\trequired\n\t\t\t\t\t></textarea>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='flex-row mt-2 d-flex justify-content-center align-items-center'>\n\t\t\t\t\t<label htmlFor='catImage' className='mr-2'>\n\t\t\t\t\t\tImage\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName='form-control form-control-sm custom-input-register'\n\t\t\t\t\t\tname='catImage'\n\t\t\t\t\t\tid='catImage'\n\t\t\t\t\t\ttype='file'\n\t\t\t\t\t\t// multiple={false}\n\t\t\t\t\t\tref={register}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit(onSubmit)} encType='multipart/form-data'>\n\t\t\t<AddCategoryForm />\n\t\t</form>\n\t);\n};\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}