{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/DART/nativeTarget/webClient/src/component/Register.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useRef } from \"react\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers\";\nimport * as yup from \"yup\";\nimport AuthService from \"../services/AuthService\"; // import ValidationService from \"./../services/ValidationService\";\n\nimport './Styles/Register.css';\n/* Validation starts here */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  email: yup.string().required(function () {\n    NotificationManager.warning(\"Email is required\");\n  }).email(\"Invalid email\") // .test(\"Unique Email\", \"Email already in use\", function (value) {\n  //   ValidationService.validateEmail(value).then((data) => {\n  //     const { message } = data;\n  //     if (data.msgError) {\n  //     NotificationManager.info(data.msgBody);\n  //     }\n  //   });\n  // }),\n  ,\n  password: yup.string(\"Password must be string \").required(function () {\n    NotificationManager.warning(\"Password is required\");\n  }).min(3, function () {\n    NotificationManager.warning(\"Password  must be atleast 3 charachters\");\n  }).max(32, function () {\n    NotificationManager.warning(\"Password  must atmost 32 chrachters\");\n  }),\n  c_password: yup.string().required(function () {\n    NotificationManager.warning(\"Confirm password is required\");\n  }).oneOf([yup.ref(\"password\"), null], function () {\n    NotificationManager.warning(\"Unmatched passwords\");\n  }),\n  username: yup.string(\"Username must be string \").required(function () {\n    NotificationManager.warning(\"Username is required \");\n  }).min(3, function () {\n    NotificationManager.warning(\"Username  must be atleast 3 charachters\");\n  }).max(32, function () {\n    NotificationManager.warning(\"Username  must atmost 32 chrachters\");\n  }) // .test(\"Unique username\", \"Username already in taken\", function (value) {\n  //   return new Promise((resolve, reject) => {\n  //     axios\n  //       .post(\"http://localhost:3001/api/users/verify/username\", {\n  //         username: value,\n  //       })\n  //       .then((res) => {\n  //         if (res.data.msg === \"Username already been taken\") {\n  //         NotificationManager.error(res.data.msg);\n  //           resolve(false);\n  //         }\n  //         resolve(true);\n  //       });\n  //   });\n  // }),\n\n});\n/* Validation ends here */\n\n/* Functional componennet starts here */\n\nconst Register = props => {\n  _s();\n\n  const {\n    register,\n    handleSubmit\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: \"onSubmit\",\n    reValidateMode: \"onSubmit\",\n    criteriaMode: \"firstError\",\n    shouldFocusError: true,\n    shouldUnregister: true,\n    defaultValues: {\n      username: \"\",\n      email: \"\",\n      mobile: \"\",\n      role: \"\",\n      password: \"\",\n      c_password: \"\"\n    }\n  });\n  const [setUser] = useState({\n    username: \"\",\n    password: \"\",\n    role: \"\"\n  });\n  let timerID = useRef(null);\n\n  const resetForm = () => {\n    setUser({\n      username: \"\",\n      password: \"\",\n      role: \"\"\n    });\n  };\n\n  const onSubmit = formData => {\n    AuthService.register(formData).then(data => {\n      const {\n        message\n      } = data;\n      resetForm();\n\n      if (!message.msgError) {\n        timerID = setTimeout(() => {\n          props.history.push(\"/login\");\n        }, 2000);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid h-100 container-register-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5 mb-5 col-md-4 col-sm-12 offset-sm-0 offset-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-0 m-0 card \",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center card-header\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-0 m-0 card-body \",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-row mt-2 d-flex justify-content-center align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"username\",\n                  className: \"mr-2\",\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-control form-control-sm custom-input-register\",\n                  name: \"username\",\n                  id: \"username\",\n                  ref: register\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-row mt-2 d-flex justify-content-center align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  className: \"mr-2\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control form-control-sm custom-input-register\",\n                  name: \"email\",\n                  id: \"email\",\n                  type: \"email\",\n                  ref: register,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-row mt-2 d-flex justify-content-center align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  className: \"mr-2\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control form-control-sm custom-input-register\",\n                  name: \"password\",\n                  id: \"password\",\n                  type: \"password\",\n                  ref: register\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-row mt-2 d-flex justify-content-center align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"c_password\",\n                  className: \"mr-2\",\n                  children: \"Confirm password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control form-control-sm custom-input-register\",\n                  name: \"c_password\",\n                  id: \"c_password\",\n                  type: \"password\",\n                  ref: register\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-row mt-2 d-flex justify-content-center align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"mobile\",\n                  className: \"mr-2\",\n                  children: \"Mobile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control form-control-sm custom-input-register\",\n                  name: \"mobile\",\n                  id: \"mobile\",\n                  type: \"number\",\n                  ref: register\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center card-footer\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \" btn btn-success btn-sm custom-submit-btn\",\n                type: \"submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"AaEhS5vH6x2hzlCLS45586TiMfE=\", false, function () {\n  return [useForm];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/asd/Desktop/DART/nativeTarget/webClient/src/component/Register.jsx"],"names":["React","useState","useRef","NotificationContainer","NotificationManager","useForm","yupResolver","yup","AuthService","schema","object","shape","email","string","required","warning","password","min","max","c_password","oneOf","ref","username","Register","props","register","handleSubmit","resolver","mode","reValidateMode","criteriaMode","shouldFocusError","shouldUnregister","defaultValues","mobile","role","setUser","timerID","resetForm","onSubmit","formData","then","data","message","msgError","setTimeout","history","push"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useRef } from \"react\";\n\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\n\nimport { useForm } from \"react-hook-form\";\n\nimport { yupResolver } from \"@hookform/resolvers\";\n\nimport * as yup from \"yup\";\n\nimport AuthService from \"../services/AuthService\";\n\n// import ValidationService from \"./../services/ValidationService\";\n\nimport './Styles/Register.css'\n\n/* Validation starts here */\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .required(function () {\n    NotificationManager.warning(\"Email is required\");\n    })\n    .email(\"Invalid email\")\n    // .test(\"Unique Email\", \"Email already in use\", function (value) {\n    //   ValidationService.validateEmail(value).then((data) => {\n    //     const { message } = data;\n    //     if (data.msgError) {\n    //     NotificationManager.info(data.msgBody);\n    //     }\n    //   });\n    // }),\n,\n  password: yup\n    .string(\"Password must be string \")\n    .required(function () {\n    NotificationManager.warning(\"Password is required\");\n    })\n    .min(3, function () {\n    NotificationManager.warning(\"Password  must be atleast 3 charachters\");\n    })\n    .max(32, function () {\n    NotificationManager.warning(\"Password  must atmost 32 chrachters\");\n    }),\n  c_password: yup\n    .string()\n    .required(function () {\n    NotificationManager.warning(\"Confirm password is required\");\n    })\n    .oneOf([yup.ref(\"password\"), null], function () {\n    NotificationManager.warning(\"Unmatched passwords\");\n    }),\n\n  username: yup\n    .string(\"Username must be string \")\n    .required(function () {\n    NotificationManager.warning(\"Username is required \");\n    })\n    .min(3, function () {\n    NotificationManager.warning(\"Username  must be atleast 3 charachters\");\n    })\n    .max(32, function () {\n    NotificationManager.warning(\"Username  must atmost 32 chrachters\");\n    }),\n  // .test(\"Unique username\", \"Username already in taken\", function (value) {\n  //   return new Promise((resolve, reject) => {\n  //     axios\n  //       .post(\"http://localhost:3001/api/users/verify/username\", {\n  //         username: value,\n  //       })\n  //       .then((res) => {\n  //         if (res.data.msg === \"Username already been taken\") {\n  //         NotificationManager.error(res.data.msg);\n  //           resolve(false);\n  //         }\n  //         resolve(true);\n  //       });\n  //   });\n  // }),\n});\n/* Validation ends here */\n/* Functional componennet starts here */\n\nconst Register = (props) => {\n  const { register, handleSubmit } = useForm({\n    resolver: yupResolver(schema),\n    mode: \"onSubmit\",\n    reValidateMode: \"onSubmit\",\n    criteriaMode: \"firstError\",\n    shouldFocusError: true,\n    shouldUnregister: true,\n    defaultValues: {\n      username: \"\",\n      email: \"\",\n      mobile: \"\",\n      role: \"\",\n      password: \"\",\n      c_password: \"\",\n    },\n  });\n\n  const [ setUser] = useState({ username: \"\", password: \"\", role: \"\" });\n  let timerID = useRef(null);\n\n  const resetForm = () => {\n    setUser({ username: \"\", password: \"\", role: \"\" });\n  };\n\n  const onSubmit = (formData) => {\n    AuthService.register(formData).then((data) => {\n      const { message } = data;\n    \n      resetForm();\n      if (!message.msgError) {\n        timerID = setTimeout(() => {\n          props.history.push(\"/login\");\n        }, 2000);\n      }\n    });\n  };\n\n  return (\n    <div className=\"container-fluid h-100 container-register-form\">\n      <div className=\"row\">\n        <div className=\"mt-5 mb-5 col-md-4 col-sm-12 offset-sm-0 offset-md-4\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"p-0 m-0 card \">\n            <div className=\"text-center card-header\">\n              <span>Sign In</span>\n            </div>\n            <div className=\"p-0 m-0 card-body \">\n          \n            <div className=\"flex-row mt-2 d-flex justify-content-center align-items-center\">\n              <label htmlFor=\"username\" className=\"mr-2\">\n                Username\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control form-control-sm custom-input-register\"\n                name=\"username\"\n                id=\"username\"\n                ref={register}\n              />\n            </div>\n            <div className=\"flex-row mt-2 d-flex justify-content-center align-items-center\">\n              <label htmlFor=\"email\" className=\"mr-2\">\n                Email\n              </label>\n              <input\n                className=\"form-control form-control-sm custom-input-register\"\n                name=\"email\"\n                id=\"email\"\n                type=\"email\"\n                ref={register}\n                required\n              />\n            </div>\n            {/* <div className=\"flex-row mt-2 d-flex justify-content-center align-items-center\">\n              <label htmlFor=\"role\" className=\"mr-2\">\n                Role\n              </label>\n              <input\n                className=\"form-control form-control-sm custom-input-register\"\n                name=\"role\"\n                id=\"role\"\n                type=\"text\"\n                ref={register}\n              />\n            </div> */}\n            <div className=\"flex-row mt-2 d-flex justify-content-center align-items-center\">\n              <label htmlFor=\"password\" className=\"mr-2\">\n                Password\n              </label>\n              <input\n                className=\"form-control form-control-sm custom-input-register\"\n                name=\"password\"\n                id=\"password\"\n                type=\"password\"\n                ref={register}\n              />\n            </div>\n            <div className=\"flex-row mt-2 d-flex justify-content-center align-items-center\">\n              <label htmlFor=\"c_password\" className=\"mr-2\">\n                Confirm password\n              </label>\n              <input\n                className=\"form-control form-control-sm custom-input-register\"\n                name=\"c_password\"\n                id=\"c_password\"\n                type=\"password\"\n                ref={register}\n              />\n            </div>\n            <div className=\"flex-row mt-2 d-flex justify-content-center align-items-center\">\n              <label htmlFor=\"mobile\" className=\"mr-2\">\n                Mobile\n              </label>\n              <input\n                className=\"form-control form-control-sm custom-input-register\"\n                name=\"mobile\"\n                id=\"mobile\"\n                type=\"number\"\n                ref={register}\n              />\n            </div>\n\n           \n\n\n         \n            </div>\n            <div className=\"text-center card-footer\">\n            <input className=\" btn btn-success btn-sm custom-submit-btn\" type=\"submit\" />\n            </div>\n          </div>\n          </form>\n        </div>\n    \n      </div>\n      <NotificationContainer />\n    </div>\n  );\n};\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}